Local execution
===============

Ploomber offers a powerful CLI to execute your pipelines. Soopervisor builds
on top of that to provide a better experience for bookeeping pipeline runs.

By default, Soopervisor expects all the products generated by your pipeline
to be stored in an ``output/`` folder inside your project's root directory.

To execute your pipeline, just run:

.. code-block:: sh

   soopervisor build


Unlike ``ploomber build``, ``soopervisor build`` creates the environment first,
and then executes the pipeline (using ``ploomber build``). This ensures
dependency installation is part of the execution process.

Once the pipeline finishes execution, it will grab all generated output and
copy it to a ``runs/{{now}}`` folder, where ``{{now}}`` is replaced by the
timestamp at execution time. If you don't want to organize runs this way, you
can change the configuration by using a ``soopervisor.yaml`` file:

.. code-block:: yaml

   # soopervisor.yaml
   storage:
      path: '/where/to/copy/output/'


Note the difference between the pipeline output and runs storage. Soopervisor
still expects output from your pipeline in the ``output/`` folder and will
copy the contents of such folder to ``/where/to/save/output/`` when the pipeline
finishes execution.

If your pipeline saves output to a different folder, you can change the
following setting:

.. code-block:: yaml

   # soopervisor.yaml
   paths:
      products: '/where/pipeline/saves/output/'


**Note:** Relative paths in ``soopervisor.yaml`` are so to the project's root
folder *not* to the current active directory.

Executing inside a Docker container
-----------------------------------

Alternatively, you can run your pipeline inside a Docker container by changing
one setting. Create a ``soopervisor.yaml`` in your project's root folder
with:


.. code-block:: yaml

   # soopervisor.yaml
   executor: 'docker'


**Note:** for this to work, Docker should be properly configured in the host.
