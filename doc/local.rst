Local execution
===============

Ploomber offers a powerful CLI to execute your pipelines. Soopervisor builds
on top of that to provide a better experience for bookeeping pipeline runs.

By default, Soopervisor expects all the products generated by your pipeline
to be stored in an ``output/`` folder inside your project's root directory.

To execute your pipeline, just run:

.. code-block:: sh

   soopervisor build


Unlike ``ploomber build``, ``soopervisor build`` creates the environment first,
and then executes the pipeline (using ``ploomber build``). This ensures
dependency installation is part of the reproducibility process.

Once the pipeline finishes execution, it will grab all generated output and
copy it to a ``runs/{{git}}`` folder, where ``{{git}}`` is replaced by the
current git hash (Soopervisor assumes you are using git).


Executing inside a Docker container
-----------------------------------

Alternatively, you can run your pipeline inside a Docker container by changing
one setting. Create a ``soopervisor.yaml`` in your project's root folder
with:

.. code-block:: yaml

   # soopervisor.yaml
   executor: 'docker'


Uploading products to Box
-------------------------

[Work in progress]


Using Soopervisor for Continuous Integration
--------------------------------------------

Since Soopervisor takes care of installing the environemnt and running the
pipeline, you can use it to automate pipeline execution on every push.

We actually use Soopervisor to test `Ploomber's examples <https://github.com/ploomber/projects/blob/master/.github/workflows/ci.yml>`_,
if you take a look at the file in the link you'll notice that testing the examples takes just two lines of code:

.. code-block:: sh

   pip install soopervisor
   soopervisor build


Customization
-------------

If you want to customize Soopervisor's behavior, here's the complete schema for
the ``soopervisor.yaml`` file:

Root section
************

.. autoclass:: soopervisor.script.ScriptConfig.ScriptConfig


``paths`` section
*****************

.. autoclass:: soopervisor.script.ScriptConfig.Paths

``storage`` section
*******************

.. autoclass:: soopervisor.script.ScriptConfig.StorageConfig
